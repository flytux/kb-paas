{
  "version": 4,
  "terraform_version": "1.5.7",
  "serial": 1266,
  "lineage": "da6684e8-51d9-b7cb-ee9f-71996243562f",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "local_file",
      "name": "prepare-upgrade-master",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/sh\nPATH=$PATH:/usr/local/bin\n\nNEW_VERSION=v1.27.6\nMASTER_IP=101.101.101.101\nHOST_IP=$(hostname -I | awk '{print $1}')\nOLD_VERSION=$(/usr/local/bin/kubeadm version | grep -oE 'v([1-9]|\\.)+')\n\necho \"=== check kubeadm plan ===\"\nmv /usr/local/bin/kubeadm kubeadm-$OLD_VERSION\ncp kubeadm/kubernetes/$NEW_VERSION/kubeadm /usr/local/bin/kubeadm \u0026\u0026 chmod +x /usr/local/bin/kubeadm\n\nkubeadm upgrade plan\n\nif [ \"$HOST_IP\" = \"$MASTER_IP\" ]\n  then\n    echo \"=== upgrade master init node ===\"\n    kubeadm upgrade apply $NEW_VERSION -y\n  else\n    echo \"=== upgrade master member node ===\"\n    kubeadm upgrade node \nfi\n\necho \"=== stop kubelet.service ===\"\nsystemctl stop kubelet.service\n\necho \"=== copy new version kubelet and restart\"\ncp kubeadm/kubernetes/$NEW_VERSION/kubelet /usr/local/bin/kubelet \u0026\u0026 chmod +x /usr/local/bin/kubelet\n\necho \"=== restart kubelet.service ===\"\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n",
            "content_base64": null,
            "content_base64sha256": "R5ta8/kuwsjDZX/wD8PYYqCeUwflUK+dpS+4TJVsAvY=",
            "content_base64sha512": "N6pUvjIyfawqLQ1Zu5c/R71+FI1bLIgiipZupA7sOGy48N2mJnoWTngLPI4HiKUQBDhXxJYCEFoOPn6NecXAxg==",
            "content_md5": "2b384bd9ac4565cffcbdfe6ab7f7db1a",
            "content_sha1": "650d26e4c621dfa7a63114e6a6f80f97b4b20b2f",
            "content_sha256": "479b5af3f92ec2c8c3657ff00fc3d862a09e5307e550af9da52fb84c956c02f6",
            "content_sha512": "37aa54be32327dac2a2d0d59bb973f47bd7e148d5b2c88228a966ea40eec386cb8f0dda6267a164e780b3c8e0788a510043857c49602105a0e3e7e8d79c5c0c6",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./artifacts/kubeadm/scripts/upgrade-master.sh",
            "id": "650d26e4c621dfa7a63114e6a6f80f97b4b20b2f",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig",
            "terraform_data.worker_containerd_upgrade"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "prepare-upgrade-worker",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/sh\nPATH=$PATH:/usr/local/bin\n\nNEW_VERSION=v1.27.6\nMASTER_IP=192.168.122.101\nHOST_IP=$(hostname -I | awk '{print $1}')\nOLD_VERSION=$(/usr/local/bin/kubeadm version | grep -oE 'v([1-9]|\\.)+')\n\necho \"=== check kubeadm plan ===\"\ncp kubeadm/kubernetes/$NEW_VERSION/kubeadm /usr/local/bin/kubeadm \u0026\u0026 chmod +x /usr/local/bin/kubeadm\n\necho \"=== upgrade node ===\"\ncrictl config image-endpoint\n\nkubeadm upgrade node \n\necho \"=== drain node ===\"\nkubectl drain $(hostname) --ignore-daemonsets\necho \"=== stop kubelet.service ===\"\nsystemctl stop kubelet.service\n\necho \"=== copy new version kubelet and restart\"\ncp ./kubeadm/kubernetes/$NEW_VERSION/kubelet /usr/local/bin/kubelet \u0026\u0026 chmod +x /usr/local/bin/kubelet\n\necho \"=== restart kubelet.service ===\"\nsystemctl daemon-reload\nsystemctl restart kubelet.service\n\necho \"=== uncordon node ===\"\nkubectl uncordon $(hostname)\n",
            "content_base64": null,
            "content_base64sha256": "jcmTVjmo52jfwYvGDfmwMPGefdpG7Uj/7uVqVkzhkCQ=",
            "content_base64sha512": "56HDUKg3IFL1ZNc3VGOjkxS0CbzFWFqXiX9H+evJ8nlRb0L18fqs3DGVEkxwTehv1CYsxyPxYZc+KMYHR6gziw==",
            "content_md5": "0328331c1fbaad6e6151ad1f6172cff2",
            "content_sha1": "ac64e5d4dc9972417d05139a2c0274f9eaab28c4",
            "content_sha256": "8dc9935639a8e768dfc18bc60df9b030f19e7dda46ed48ffeee56a564ce19024",
            "content_sha512": "e7a1c350a8372052f564d7375463a39314b409bcc5585a97897f47f9ebc9f279516f42f5f1faacdc3195124c704de86fd4262cc723f161973e28c60747a8338b",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./artifacts/kubeadm/scripts/upgrade-worker.sh",
            "id": "ac64e5d4dc9972417d05139a2c0274f9eaab28c4",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare-upgrade-master",
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig",
            "terraform_data.worker_containerd_upgrade"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "local_file",
      "name": "prepare_migrate_to_containerd",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "content": "#!/bin/sh\n\nsetenforce 0\nsed -i --follow-symlinks 's/SELINUX=.*/SELINUX=disabled/g' /etc/sysconfig/selinux\n\necho \"=== install rpms  ===\"\n # Install required packages\necho \"10.10.10.101  repo.kw01 docker.kw01\" \u003e\u003e /etc/hosts\n\necho \"=== update registry ca certs ===\"\ncp kubeadm/certs/* /etc/pki/ca-trust/source/anchors/\nupdate-ca-trust\n\n#rpm -Uvh kubeadm/packages/*.rpm\nrm -rf /etc/yum.repos.d/Rocky*\ncat \u003c\u003c EOF \u003e /etc/yum.repos.d/kw01.repo\n[kw01]\nname=kw01\nbaseurl=http://repo.kw01/repo/\ngpgcheck=0\nenabled=1\nmodule_hotfixes=1\nEOF\n\nrpm -Uvh --force kubeadm/packages/*.rpm\n\nmkdir -p /etc/containerd\n\\cp kubeadm/packages/config.toml /etc/containerd/\n\nmkdir -p /etc/nerdctl\ncp kubeadm/kubernetes/config/nerdctl.toml /etc/nerdctl/nerdctl.toml\nsystemctl restart containerd\n\n\\cp kubeadm/kubernetes/bin/*ctl /usr/local/bin \u0026\u0026 chmod +x /usr/local/bin/*\n\n\\cp -rf kubeadm/cni /opt\n\\cp -rf kubeadm/.kube $HOME\n\necho \"=== change container runtime annotaion of nodes  ===\"\nwhile ! kubectl get node $(hostname) -o yaml | sed \"/creationTimestamp.*/d\" | sed \"/resourceVersion.*/d\" | sed \"/uid.*/d\" | sed \"s/unix:.*/unix:\\/\\/\\/run\\/containerd\\/containerd.sock/g\" | kubectl apply -f - ; do echo please waits for api-server up; sleep 5; done\n\necho \"=== stop kubelet ===\"\nsystemctl stop kubelet\n\n\\cp kubeadm/kubernetes/config/kubelet.service /etc/systemd/system\n\\cp -r kubeadm/kubernetes/config/kubelet.service.d /etc/systemd/system\n\ncat /var/lib/kubelet/kubeadm-flags.env | sed \"s/unix:.*sock/unix:\\/\\/\\/run\\/containerd\\/containerd.sock/g\" \u003e kf.env; mv -f kf.env /var/lib/kubelet/kubeadm-flags.env\n\ncrictl config runtime-endpoint unix:///run/containerd/containerd.sock\ncrictl config image-endpoint\n\necho \"=== start kubelet ===\"\nsystemctl daemon-reload\nsystemctl enable kubelet --now\nsystemctl disable docker.service --now\n",
            "content_base64": null,
            "content_base64sha256": "q3CiBO0HWRBztq7M6n42pZzlXt/Q8YpdqAl4Vj/QeE8=",
            "content_base64sha512": "sAj4vpDqxmHPFAzwf4UGs0QqERLTcst1+vxb2uqXSn9fOfcDmiLU3Z5bHA8vhLJ9HrLifuRtexR9vmV0MI+Log==",
            "content_md5": "c671b93a019ed6a692f3564516e08f64",
            "content_sha1": "c2e9a13281a33c9ccb406a26d5773ccaef9e8842",
            "content_sha256": "ab70a204ed07591073b6aeccea7e36a59ce55edfd0f18a5da80978563fd0784f",
            "content_sha512": "b008f8be90eac661cf140cf07f8506b3442a1112d372cb75fafc5bdaea974a7f5f39f7039a22d4dd9e5b1c0f2f84b27d1eb2e27ee46d7b147dbe6574308f8ba2",
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "./artifacts/kubeadm/scripts/migrate-to-containerd.sh",
            "id": "c2e9a13281a33c9ccb406a26d5773ccaef9e8842",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "terraform_data.prepare_kubeconfig"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "master_init_containerd_upgrade",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "index_key": "kubespray-master-1",
          "schema_version": 0,
          "attributes": {
            "id": "e079b90d-802d-b029-1576-7651317d783b",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.prepare_kubeconfig"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "master_member_containerd_upgrade",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "index_key": "kubespray-master-2",
          "schema_version": 0,
          "attributes": {
            "id": "2d5bf27d-7d33-69be-dbe1-617fe38ac693",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "prepare_kubeconfig",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "eb59d186-4b40-8ac8-3df0-7b9bde151d4a",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "prepare_script",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "8a5bb26b-f069-24a1-adaf-6187937a6b9b",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare-upgrade-master",
            "local_file.prepare-upgrade-worker",
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig",
            "terraform_data.worker_containerd_upgrade"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "upgrade-worker",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "index_key": "kubespray-worker-1",
          "schema_version": 0,
          "attributes": {
            "id": "e8de581f-b9ed-67f1-28a8-489e7074ca2c",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare-upgrade-master",
            "local_file.prepare-upgrade-worker",
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig",
            "terraform_data.prepare_script",
            "terraform_data.upgrade_master_init",
            "terraform_data.worker_containerd_upgrade"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "upgrade_master_init",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "index_key": "kubespray-master-1",
          "schema_version": 0,
          "attributes": {
            "id": "1ead3c20-5439-3ef2-9cb0-2b56e576ffab",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare-upgrade-master",
            "local_file.prepare-upgrade-worker",
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig",
            "terraform_data.prepare_script",
            "terraform_data.worker_containerd_upgrade"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "upgrade_master_member",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "index_key": "kubespray-master-2",
          "schema_version": 0,
          "attributes": {
            "id": "8e899de6-1298-555d-62b5-77c45f953a01",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare-upgrade-master",
            "local_file.prepare-upgrade-worker",
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig",
            "terraform_data.prepare_script",
            "terraform_data.upgrade_master_init",
            "terraform_data.worker_containerd_upgrade"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "terraform_data",
      "name": "worker_containerd_upgrade",
      "provider": "provider[\"terraform.io/builtin/terraform\"]",
      "instances": [
        {
          "index_key": "kubespray-worker-1",
          "schema_version": 0,
          "attributes": {
            "id": "97be73a5-1dc6-9db2-d304-db586673b706",
            "input": null,
            "output": null,
            "triggers_replace": null
          },
          "sensitive_attributes": [],
          "dependencies": [
            "local_file.prepare_migrate_to_containerd",
            "terraform_data.master_init_containerd_upgrade",
            "terraform_data.prepare_kubeconfig"
          ]
        }
      ]
    }
  ],
  "check_results": null
}
